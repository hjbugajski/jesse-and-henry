/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadTagColorField".
 */
export type PayloadTagColorField =
  | ('gray' | 'green' | 'teal' | 'cyan' | 'blue' | 'violet' | 'purple' | 'plum' | 'pink' | 'red' | 'orange')
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadRsvpField".
 */
export type PayloadRsvpField = ('accept' | 'decline') | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadYesNoField".
 */
export type PayloadYesNoField = ('yes' | 'no') | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadMealPreferenceField".
 */
export type PayloadMealPreferenceField = ('beef' | 'fish' | 'vegetarian') | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadRolesField".
 */
export type PayloadRolesField = ('admin' | 'editor' | 'public')[];
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadLinkArrayField".
 */
export type PayloadLinkArrayField =
  | {
      text: string;
      icon?: PayloadIconField;
      type: 'internal' | 'external';
      relationship?: (string | null) | PayloadPagesCollection;
      anchor?: string | null;
      url?: string | null;
      rel?: PayloadRelField;
      newTab?: boolean | null;
      umamiEvent?: string | null;
      umamiEventId?: string | null;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadIconField".
 */
export type PayloadIconField =
  | (
      | 'alert'
      | 'arrowRight'
      | 'borgoCorsignano'
      | 'chevronDown'
      | 'circleCheck'
      | 'circleX'
      | 'close'
      | 'externalLink'
      | 'heart'
      | 'help'
      | 'info'
      | 'logout'
      | 'maximize'
      | 'menu'
      | 'minimize'
    )
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadRelField".
 */
export type PayloadRelField = ('noopener' | 'noreferrer' | 'nofollow')[] | null;
/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadColorField".
 */
export type PayloadColorField = 'neutral' | 'neutral-variant' | 'primary' | 'secondary' | 'tertiary' | 'danger';

export interface Config {
  auth: {
    guests: GuestAuthOperations;
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: PayloadPagesCollection;
    faqs: PayloadFaqsCollection;
    media: PayloadMediaCollection;
    guests: PayloadGuestsCollection;
    parties: PayloadPartiesCollection;
    relations: PayloadRelationsCollection;
    sides: PayloadSidesCollection;
    users: PayloadUsersCollection;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    faqs: FaqsSelect<false> | FaqsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    guests: GuestsSelect<false> | GuestsSelect<true>;
    parties: PartiesSelect<false> | PartiesSelect<true>;
    relations: RelationsSelect<false> | RelationsSelect<true>;
    sides: SidesSelect<false> | SidesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    config: PayloadConfigGlobal;
    navigation: PayloadNavigationGlobal;
  };
  globalsSelect: {
    config: ConfigSelect<false> | ConfigSelect<true>;
    navigation: NavigationSelect<false> | NavigationSelect<true>;
  };
  locale: null;
  user:
    | (PayloadGuestsCollection & {
        collection: 'guests';
      })
    | (PayloadUsersCollection & {
        collection: 'users';
      });
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface GuestAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface PayloadPagesCollection {
  id: string;
  title: string;
  description: string;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  parent?: (string | null) | PayloadPagesCollection;
  slug?: string | null;
  path?: string | null;
  breadcrumbs?:
    | {
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs".
 */
export interface PayloadFaqsCollection {
  id: string;
  question: string;
  answer?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface PayloadMediaCollection {
  id: string;
  alt: string;
  displayOriginal: boolean;
  dataUrl?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    preview?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guests".
 */
export interface PayloadGuestsCollection {
  id: string;
  first?: string | null;
  middle?: string | null;
  last?: string | null;
  party?: (string | null) | PayloadPartiesCollection;
  side?: (string | null) | PayloadSidesCollection;
  relation?: (string | null) | PayloadRelationsCollection;
  phone?: string | null;
  address?: string | null;
  rsvpWelcomeParty?: PayloadRsvpField;
  rsvpRehearsalDinner?: PayloadRsvpField;
  rsvpWeddingDay?: PayloadRsvpField;
  rsvpPoolDay?: PayloadRsvpField;
  transportationToVenue?: PayloadYesNoField;
  transportationFromVenue?: PayloadYesNoField;
  legalName?: string | null;
  dateOfBirth?: string | null;
  countryOfBirth?: string | null;
  allergies?: string | null;
  mealPreference?: PayloadMealPreferenceField;
  sort?: number | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "parties".
 */
export interface PayloadPartiesCollection {
  id: string;
  value: string;
  color?: PayloadTagColorField;
  sort?: number | null;
  code?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sides".
 */
export interface PayloadSidesCollection {
  id: string;
  value: string;
  color?: PayloadTagColorField;
  sort?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "relations".
 */
export interface PayloadRelationsCollection {
  id: string;
  value: string;
  color?: PayloadTagColorField;
  sort?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface PayloadUsersCollection {
  id: string;
  firstName?: string | null;
  lastName?: string | null;
  roles: PayloadRolesField;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | PayloadPagesCollection;
      } | null)
    | ({
        relationTo: 'faqs';
        value: string | PayloadFaqsCollection;
      } | null)
    | ({
        relationTo: 'media';
        value: string | PayloadMediaCollection;
      } | null)
    | ({
        relationTo: 'guests';
        value: string | PayloadGuestsCollection;
      } | null)
    | ({
        relationTo: 'parties';
        value: string | PayloadPartiesCollection;
      } | null)
    | ({
        relationTo: 'relations';
        value: string | PayloadRelationsCollection;
      } | null)
    | ({
        relationTo: 'sides';
        value: string | PayloadSidesCollection;
      } | null)
    | ({
        relationTo: 'users';
        value: string | PayloadUsersCollection;
      } | null);
  globalSlug?: string | null;
  user:
    | {
        relationTo: 'guests';
        value: string | PayloadGuestsCollection;
      }
    | {
        relationTo: 'users';
        value: string | PayloadUsersCollection;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user:
    | {
        relationTo: 'guests';
        value: string | PayloadGuestsCollection;
      }
    | {
        relationTo: 'users';
        value: string | PayloadUsersCollection;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  content?: T;
  parent?: T;
  slug?: T;
  path?: T;
  breadcrumbs?:
    | T
    | {
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs_select".
 */
export interface FaqsSelect<T extends boolean = true> {
  question?: T;
  answer?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  displayOriginal?: T;
  dataUrl?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        preview?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guests_select".
 */
export interface GuestsSelect<T extends boolean = true> {
  first?: T;
  middle?: T;
  last?: T;
  party?: T;
  side?: T;
  relation?: T;
  phone?: T;
  address?: T;
  rsvpWelcomeParty?: T;
  rsvpRehearsalDinner?: T;
  rsvpWeddingDay?: T;
  rsvpPoolDay?: T;
  transportationToVenue?: T;
  transportationFromVenue?: T;
  legalName?: T;
  dateOfBirth?: T;
  countryOfBirth?: T;
  allergies?: T;
  mealPreference?: T;
  sort?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "parties_select".
 */
export interface PartiesSelect<T extends boolean = true> {
  value?: T;
  color?: T;
  sort?: T;
  code?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "relations_select".
 */
export interface RelationsSelect<T extends boolean = true> {
  value?: T;
  color?: T;
  sort?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sides_select".
 */
export interface SidesSelect<T extends boolean = true> {
  value?: T;
  color?: T;
  sort?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  roles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "config".
 */
export interface PayloadConfigGlobal {
  id: string;
  rsvpDeadline: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation".
 */
export interface PayloadNavigationGlobal {
  id: string;
  links?: PayloadLinkArrayField;
  showCta?: boolean | null;
  callToAction?: PayloadLinkGroupField;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadLinkGroupField".
 */
export interface PayloadLinkGroupField {
  text: string;
  icon?: PayloadIconField;
  type: 'internal' | 'external';
  relationship?: (string | null) | PayloadPagesCollection;
  anchor?: string | null;
  url?: string | null;
  rel?: PayloadRelField;
  newTab?: boolean | null;
  umamiEvent?: string | null;
  umamiEventId?: string | null;
  id?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "config_select".
 */
export interface ConfigSelect<T extends boolean = true> {
  rsvpDeadline?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation_select".
 */
export interface NavigationSelect<T extends boolean = true> {
  links?: T | PayloadLinkArrayFieldSelect<T>;
  showCta?: T;
  callToAction?: T | PayloadLinkGroupFieldSelect<T>;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadLinkArrayField_select".
 */
export interface PayloadLinkArrayFieldSelect<T extends boolean = true> {
  text?: T;
  icon?: T;
  type?: T;
  relationship?: T;
  anchor?: T;
  url?: T;
  rel?: T;
  newTab?: T;
  umamiEvent?: T;
  umamiEventId?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadLinkGroupField_select".
 */
export interface PayloadLinkGroupFieldSelect<T extends boolean = true> {
  text?: T;
  icon?: T;
  type?: T;
  relationship?: T;
  anchor?: T;
  url?: T;
  rel?: T;
  newTab?: T;
  umamiEvent?: T;
  umamiEventId?: T;
  color?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadHeroBlock".
 */
export interface PayloadHeroBlock {
  titleOne: string;
  titleTwo: string;
  subtitle: string;
  image: string | PayloadMediaCollection;
  id?: string | null;
  blockName?: string | null;
  blockType: 'hero';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadAlertBlock".
 */
export interface PayloadAlertBlock {
  heading: string;
  icon: PayloadIconField;
  color: PayloadColorField;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  action?: boolean | null;
  link?: PayloadLinkGroupField;
  id?: string | null;
  blockName?: string | null;
  blockType: 'alert';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadButtonLinkBlock".
 */
export interface PayloadButtonLinkBlock {
  text: string;
  icon?: PayloadIconField;
  type: 'internal' | 'external';
  relationship?: (string | null) | PayloadPagesCollection;
  anchor?: string | null;
  url?: string | null;
  rel?: PayloadRelField;
  newTab?: boolean | null;
  umamiEvent?: string | null;
  umamiEventId?: string | null;
  color: PayloadColorField;
  id?: string | null;
  blockName?: string | null;
  blockType: 'buttonLink';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadFaqBlock".
 */
export interface PayloadFaqBlock {
  faqs?: (string | PayloadFaqsCollection)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'faq';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadGalleryBlock".
 */
export interface PayloadGalleryBlock {
  images: (string | PayloadMediaCollection)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'gallery';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadImageLinkBlock".
 */
export interface PayloadImageLinkBlock {
  text: string;
  icon?: PayloadIconField;
  type: 'internal' | 'external';
  relationship?: (string | null) | PayloadPagesCollection;
  anchor?: string | null;
  url?: string | null;
  rel?: PayloadRelField;
  newTab?: boolean | null;
  umamiEvent?: string | null;
  umamiEventId?: string | null;
  image: string | PayloadMediaCollection;
  id?: string | null;
  blockName?: string | null;
  blockType: 'imageLink';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadSectionBlock".
 */
export interface PayloadSectionBlock {
  heading?: string | null;
  border: boolean;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'section';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}